apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  labels:
    # https://helm.sh/docs/chart_best_practices/labels/
    app.kubernetes.io/component: deployment
    # DO NOT edit the instance label, it is used by the runner installer action to find the installed pod.
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ .Values.appName }}
    app.kubernetes.io/version: {{ .Chart.Version | quote }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
  {{- if .Values.annotations }}
  annotations:
    {{- toYaml .Values.annotations | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        # DO NOT edit the instance label, it is used by the runner installer action to find the installed pod.
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      securityContext:
        runAsNonRoot: true

      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}

      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}

      volumes:
        # Enable custom cluster PKI
        # https://docs.openshift.com/container-platform/4.6/networking/configuring-a-custom-pki.html
        {{- if .Values.clusterPKI }}
        - name: trusted-ca
          configMap:
            name: trusted-ca
            items:
              - key: ca-bundle.crt
                path: tls-ca-bundle.pem
        {{- end }}

      containers:
        - name: {{ .Release.Name }}
          imagePullPolicy: Always

          {{- $taggedImage := printf "%s:%s" .Values.runnerImage .Values.runnerTag }}
          image: {{ $taggedImage }}

          env:
            - name: GITHUB_OWNER
              value: {{ required ".Values.githubOwner must be set." .Values.githubOwner }}
            - name: GITHUB_REPOSITORY
              value: {{ .Values.githubRepository }}
            - name: GITHUB_DOMAIN
              value: {{ .Values.githubDomain }}

            # The labels must be trimmed. The config script will stop reading labels if it encounters a space.
            - name: RUNNER_LABELS
              value: "{{ $taggedImage }},{{- range .Values.runnerLabels }}{{trim .}},{{- end }}"

            {{- if .Values.runnerGroup }}
            - name: RUNNER_GROUP
              value: {{ .Values.runnerGroup }}
            {{- end }}

            {{- if .Values.ephemeral }}
            - name: EPHEMERAL
              value: "{{ .Values.ephemeral }}"
            {{- end }}

            # App Auth
            {{- if .Values.githubAppId }}
            - name: GITHUB_APP_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appSecretName }}
                  key: {{ .Values.appIdSecretKey}}
            - name: GITHUB_APP_INSTALL_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appSecretName }}
                  key: {{ .Values.appInstallIdSecretKey}}
            - name: GITHUB_APP_PEM
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.appSecretName }}
                  key: {{ .Values.appPemSecretKey}}
            {{- end }}

            # or, PAT Auth
            {{- if .Values.githubPat }}
            - name: GITHUB_PAT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretName }}
                  key: {{ .Values.secretKey }}
            {{- end }}

              # Any injected env values from values.yaml will go here
              {{- range .Values.runnerEnv }}
            - name: {{ .name }}
              value: {{ .value }}
        {{- end }}

          securityContext:

          resources:
            requests:
              memory: {{ .Values.memoryRequest }}
              cpu: {{ .Values.cpuRequest }}
            limits:
              memory: {{ .Values.memoryLimit }}
              cpu: {{ .Values.cpuLimit }}

          # Wait until the runner service is actually listening before the pod goes into the Ready state.
          # The entrypoint script takes 5-10s to connect to GitHub and start listening for jobs.
          # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.20/#probe-v1-core
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 1
            exec:
              command:
                - pgrep
                - Runner.Listener

          volumeMounts:
            {{- if .Values.clusterPKI }}
            - name: trusted-ca
              mountPath: /etc/pki/ca-trust/extracted/pem
              readOnly: true
            {{- end }}
